neo4j:
  name: "standalone"
  resources:
    cpu: "1.100"
    memory: "5G"

  passwordFromSecret: "neo4jpwd"
  offlineMaintenanceModeEnabled: false
  # Uncomment to use enterprise edition
  edition: "enterprise"
  acceptLicenseAgreement: "yes"
  minimumClusterSize: "1"

services:
  neo4j:
    # Do not create the LB; Create LB in separate manifest
    enabled: false

env:
  NEO4J_PLUGINS: '["apoc", "graph-data-science", "bloom", "genai"]'

config:
  server.backup.enabled: "true"
  server.config.strict_validation.enabled: "false"
  db.logs.query.enabled: "OFF"
  server.directories.transaction.logs.root: /transactions
  gds.enterprise.license_file: "/licenses/gds.license"
  dbms.bloom.license_file: "/licenses/bloom.license"  
  dbms.security.procedures.unrestricted: "apoc.*,bloom.*,gds.*,genai.*"
  server.unmanaged_extension_classes: "com.neo4j.bloom.server=/bloom"
  dbms.security.http_auth_allowlist: "/,/browser.*,/bloom.*"
  server.memory.heap.initial_size: "2G"
  server.memory.heap.max_size: "2G"
  server.memory.pagecache.size: "1500M"
  #below for testing use only - TX log retention must match backup strategy and/or time for store copy
  db.tx_log.rotation.retention_policy: "1 hours"

apoc_config:
  apoc.export.file.enabled: "true"
  apoc.import.file.enabled: "true"
  apoc.trigger.enabled: "true"

volumes:
  data:
    mode: "dynamic"
    dynamic:
      storageClassName: "neo4j-ssd"
      requests:
        storage: 100Gi
# Optional - Create a second disk for the transactions which will increase IOPS and Throughput
  transactions:
      mode: "dynamic"
      dynamic:
        storageClassName: "neo4j-ssd"
        accessModes:
          - ReadWriteOnce
        requests:
          storage: 50Gi
  # optional - create mount for import 
  # mount for license secrets
  licenses:
    disableSubPathExpr: true
    mode: volume
    volume:
      secret:
        secretName: gds-bloom-license
        items:
          - key: gds.license
            path: gds.license
          - key: bloom.license
            path: bloom.license
  
